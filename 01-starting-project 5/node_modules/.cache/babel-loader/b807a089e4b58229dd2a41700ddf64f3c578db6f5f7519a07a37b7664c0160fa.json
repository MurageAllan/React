{"ast":null,"code":"var _jsxFileName = \"/home/allan/Videos/01-starting-project 5/src/components/Meals/MealItem/MealItemForm.js\",\n  _s = $RefreshSig$();\nimport React, { useRef, useState } from \"react\";\nimport Input from \"../../UI/Input\";\nimport classes from \"./MealItemForm.module.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst MealItemForm = props => {\n  _s();\n  const [amountIsValid, setAmountIsValid] = useState(true);\n  const amountInputRef = useRef();\n  const submitHandler = event => {\n    event.preventDefault();\n    const enteredAmount = amountInputRef.current.value; // The input value is always a string type\n    const enteredAmountNum = +enteredAmount; // converts the value string to a number type\n\n    // Do a quick check on the amount input\n    if (enteredAmount.trim().length === 0 || enteredAmountNum < 1 || enteredAmountNum > 5) {\n      setAmountIsValid(false);\n      return;\n    }\n    // forward the entered amount number.\n    // props.onAddToCart(enteredAmountNum);\n  };\n  // If the amount number is invalid then output the <p>message</p>\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    className: classes.form,\n    onSubmit: submitHandler,\n    children: [/*#__PURE__*/_jsxDEV(Input, {\n      ref: amountInputRef,\n      label: \"Amount\",\n      input: {\n        id: \"amount_\" + props.id,\n        type: \"number\",\n        min: 1,\n        max: 5,\n        step: 1,\n        defaultValue: 1\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      type: \"submit\",\n      children: \" +Add\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }, this), !amountIsValid && /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Please enter a valid amount (1-5).\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 26\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 30,\n    columnNumber: 5\n  }, this);\n};\n_s(MealItemForm, \"49LGRK4jBiAcXkiYfsTkxzkpjmw=\");\n_c = MealItemForm;\nexport default MealItemForm;\nvar _c;\n$RefreshReg$(_c, \"MealItemForm\");","map":{"version":3,"names":["React","useRef","useState","Input","classes","MealItemForm","props","amountIsValid","setAmountIsValid","amountInputRef","submitHandler","event","preventDefault","enteredAmount","current","value","enteredAmountNum","trim","length","form","id","type","min","max","step","defaultValue"],"sources":["/home/allan/Videos/01-starting-project 5/src/components/Meals/MealItem/MealItemForm.js"],"sourcesContent":["import React, { useRef, useState } from \"react\";\nimport Input from \"../../UI/Input\";\n\nimport classes from \"./MealItemForm.module.css\";\n\nconst MealItemForm = (props) => {\n  const [amountIsValid, setAmountIsValid] = useState(true);\n  const amountInputRef = useRef();\n\n  const submitHandler = (event) => {\n    event.preventDefault();\n\n    const enteredAmount = amountInputRef.current.value; // The input value is always a string type\n    const enteredAmountNum = +enteredAmount; // converts the value string to a number type\n\n    // Do a quick check on the amount input\n    if (\n      enteredAmount.trim().length === 0 ||\n      enteredAmountNum < 1 ||\n      enteredAmountNum > 5\n    ) {\n      setAmountIsValid(false);\n      return;\n    }\n    // forward the entered amount number.\n    // props.onAddToCart(enteredAmountNum);\n  };\n  // If the amount number is invalid then output the <p>message</p>\n  return (\n    <form className={classes.form} onSubmit={submitHandler}>\n      <Input\n        ref={amountInputRef}\n        label=\"Amount\"\n        input={{\n          id: \"amount_\" + props.id,\n          type: \"number\",\n          min: 1,\n          max: 5,\n          step: 1,\n          defaultValue: 1,\n        }}\n      />\n      <button type=\"submit\"> +Add</button>\n      {!amountIsValid && <p>Please enter a valid amount (1-5).</p>}\n    </form>\n  );\n};\n\nexport default MealItemForm;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,MAAM,EAAEC,QAAQ,QAAQ,OAAO;AAC/C,OAAOC,KAAK,MAAM,gBAAgB;AAElC,OAAOC,OAAO,MAAM,2BAA2B;AAAC;AAEhD,MAAMC,YAAY,GAAIC,KAAK,IAAK;EAAA;EAC9B,MAAM,CAACC,aAAa,EAAEC,gBAAgB,CAAC,GAAGN,QAAQ,CAAC,IAAI,CAAC;EACxD,MAAMO,cAAc,GAAGR,MAAM,EAAE;EAE/B,MAAMS,aAAa,GAAIC,KAAK,IAAK;IAC/BA,KAAK,CAACC,cAAc,EAAE;IAEtB,MAAMC,aAAa,GAAGJ,cAAc,CAACK,OAAO,CAACC,KAAK,CAAC,CAAC;IACpD,MAAMC,gBAAgB,GAAG,CAACH,aAAa,CAAC,CAAC;;IAEzC;IACA,IACEA,aAAa,CAACI,IAAI,EAAE,CAACC,MAAM,KAAK,CAAC,IACjCF,gBAAgB,GAAG,CAAC,IACpBA,gBAAgB,GAAG,CAAC,EACpB;MACAR,gBAAgB,CAAC,KAAK,CAAC;MACvB;IACF;IACA;IACA;EACF,CAAC;EACD;EACA,oBACE;IAAM,SAAS,EAAEJ,OAAO,CAACe,IAAK;IAAC,QAAQ,EAAET,aAAc;IAAA,wBACrD,QAAC,KAAK;MACJ,GAAG,EAAED,cAAe;MACpB,KAAK,EAAC,QAAQ;MACd,KAAK,EAAE;QACLW,EAAE,EAAE,SAAS,GAAGd,KAAK,CAACc,EAAE;QACxBC,IAAI,EAAE,QAAQ;QACdC,GAAG,EAAE,CAAC;QACNC,GAAG,EAAE,CAAC;QACNC,IAAI,EAAE,CAAC;QACPC,YAAY,EAAE;MAChB;IAAE;MAAA;MAAA;MAAA;IAAA,QACF,eACF;MAAQ,IAAI,EAAC,QAAQ;MAAA;IAAA;MAAA;MAAA;MAAA;IAAA,QAAe,EACnC,CAAClB,aAAa,iBAAI;MAAA;IAAA;MAAA;MAAA;MAAA;IAAA,QAAyC;EAAA;IAAA;IAAA;IAAA;EAAA,QACvD;AAEX,CAAC;AAAC,GAzCIF,YAAY;AAAA,KAAZA,YAAY;AA2ClB,eAAeA,YAAY;AAAC;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}